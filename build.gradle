plugins {
id "java-library"
id "io.qameta.allure" version "2.8.1"
id "com.github.ben-manes.versions" version "0.27.0"
}


allure {
    version = "2.13.1"
    downloadLinkFormat = "https://dl.bintray.com/qameta/maven/io/qameta/allure/allure-commandline/%s/allure-commandline-%<s.zip"
}

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

repositories {
    mavenCentral()
}

// add examples in the same way as "main" and "test"
sourceSets {
    main {
        java {
            srcDir 'src/examples/java'
        }
        resources {
            srcDir 'src/examples/resources'
        }
    }
}

dependencies {
    compile 'com.github.scribejava:scribejava-apis:6.2.0'
    compile 'org.slf4j:slf4j-api:1.7.25'

    compile 'com.github.scribejava:scribejava-apis:6.2.0'
    implementation("io.qameta.allure:allure-okhttp:2.13.1")
    //testImplementation("org.junit.jupiter:junit-jupiter:5.5.2")
    //testRuntimeOnly("io.qameta.allure:allure-junit5:2.13.1")
    // https://mvnrepository.com/artifact/io.qameta.allure/allure-testng
    implementation 'io.qameta.allure:allure-testng:2.13.1'
    // https://mvnrepository.com/artifact/com.squareup.okhttp3/okhttp
    compile group: 'com.squareup.okhttp3', name: 'okhttp', version: '4.2.2'

    testRuntimeOnly("org.slf4j:slf4j-simple:1.7.30")
    implementation 'org.testng:testng:6.14.3'
    // https://mvnrepository.com/artifact/io.rest-assured/rest-assured
    testCompile group: 'io.rest-assured', name: 'rest-assured', version: '3.0.0'
    // https://mvnrepository.com/artifact/io.qameta.allure/allure-rest-assured
    compile group: 'io.qameta.allure', name: 'allure-rest-assured', version: '2.13.1'
    implementation 'log4j:log4j:1.2.17'
    // https://mvnrepository.com/artifact/com.googlecode.json-simple/json-simple
    compile group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1'
    // https://mvnrepository.com/artifact/com.mashape.unirest/unirest-java
    compile group: 'com.mashape.unirest', name: 'unirest-java', version: '1.3.1'
    // https://mvnrepository.com/artifact/com.google.code.gson/gson
    testImplementation 'com.google.code.gson:gson:2.8.5'
    compile 'joda-time:joda-time:2.10.5'
    // https://mvnrepository.com/artifact/org.apache.poi/poi
    compile group: 'org.apache.poi', name: 'poi', version: '3.17'

}




//create sources jar for maven repo
task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}



apply plugin:'java'

test{
    //allways run tests
    dependsOn(cleanTest)
    useTestNG()
    // listen to events in the test execution lifecycle
    beforeTest { descriptor ->
        logger.lifecycle("Running test: " + descriptor)
    }

    // Fail the 'test' task on the first test failure
    //failFast = true

    // listen to standard out and standard error of the test JVM(s)
    onOutput { descriptor, event ->
        logger.lifecycle("Test: " + descriptor + " produced standard out/err: " + event.message )
    }

}